/* Check that we generate multiple verification conditions. */
method LocalSpec.test1 {
    var args[0] :: int[12];
    localSpec 4 {
        modifies: valueOf(args[0]);
    };
    modifies: valueOf(args[0]);
    verifyUsing: abc;
};

/* Test that we can check intermediate values. */
/* Disabled until we implement evaluation of ensures clauses at the
beginning of execution fragments. */
/*
method LocalSpec.test2 {
    var args[0] :: int[1];
    localSpec 4 {
        ensures valueOf(args[0]) := [1 : [32]];
    };
    ensures valueOf(args[0]) := [2 : [32]];
    verifyUsing: abc;
};
*/

/* Test that we can handle arbitrary iteration counts. */
method LocalSpec.test3 {
    var args[0] :: int[1];
    var args[1] :: int[1];
    /* The one back edge in this method is from "goto 4". */
    localSpec 4 {
        modifies: valueOf(args[0]);
    };
    modifies: valueOf(args[0]);
    verifyUsing: abc;
};

method LocalSpec.test4 {
    var args[0] :: int[1];
    /* The one back edge in this method is from location 14. */
    localSpec 14 {
        ensures valueOf(args[0]) := [join(valueOf(args[0])) - (1 : [32])];
    };
    modifies: valueOf(args[0]);
    verifyUsing: abc;
};
