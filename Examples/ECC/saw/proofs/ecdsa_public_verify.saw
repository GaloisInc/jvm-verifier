import "common.saw";
import "rules.saw";

rule imp_true_elim1  : forAll {x:Bit}. x     ==> true  -> true;

set verification off;
import "leq.saw";
import "sub.saw";
import "mod_div.spec";
import "group_mul.spec";
import "assign.saw";
extern SBV ref_ec_twin_mul("../spec/sbv/generated/p384_ec_twin_mul.sbv") :
  ([384], { x: [384]; y: [384] }, [384], { x: [384]; y: [384] }) ->
  { x: [384]; y: [384]; z: [384] };
import "ec_twin_mul.qcspec";
import "is_zero.saw";
import "field_sq.spec";
import "field_mul.spec";
import "is_equal.saw";
import "add.saw";
set verification on;

extern SBV ref_ecdsa_public_verify(
    "../spec/sbv/generated/p384_ecdsa_public_verify.sbv"
  ) : ([384], [384], [384], { x:[384]; y:[384] }) -> Bit;

enable ref_ecdsa_public_verify;
import "ecdsa_public_verify.spec";
