/*

////////////////////////////////////////////////////////////////////////////////
// Imported functions from the Cryptol specification

// extern SBV ref_prime_div("../spec/sbv/generated/ref_p384_prime_div.sbv")
//  : ([384],[384],[384]) -> [384];

// Scalar multiplication 

extern SBV p384_ref_double("../spec/sbv/generated/p384_ref_double.sbv")
  : { x : [384]; y : [384]; z : [384] } -> { x : [384]; y : [384]; z : [384] };
extern SBV p384_ref_full_add("../spec/sbv/generated/p384_ref_full_add.sbv")
  : ({ x: [384]; y: [384]; z: [384] }, { x:[384]; y:[384] }) -> { x:[384]; y:[384]; z:[384] };
extern SBV p384_ref_full_sub("../spec/sbv/generated/p384_ref_full_sub.sbv")
  : ({ x: [384]; y: [384]; z: [384] }, { x:[384]; y:[384] }) -> { x:[384]; y:[384]; z:[384] };
extern SBV p384_ref_mul_aux("../spec/sbv/generated/p384_ref_mul_aux.sbv")
  : ({ x: [384]; y: [384]; z: [384] }, { x:[384]; y:[384] }, [32], [32], [32]) -> { x: [384]; y: [384]; z: [384] };

extern SBV ref_ec_mul("../spec/sbv/generated/ref_p384_ec_mul.sbv")
  : ([384], { x: [384]; y: [384]}) -> { x:[384]; y:[384]; z:[384] };

*/

import "common.saw";
import "ec_mul.qcspec";
